<!DOCTYPE html>
<html>

<head>
    <title>View Appointments</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.css" rel="stylesheet">
    <style>
        body {
            background: #f7f9fb;
        }

        .sidebar {
            min-height: 100vh;
            background: #fff;
            border-right: 1px solid #eee;
        }

        .sidebar .list-group-item.active {
            background: #ffeee7;
            color: #ba5405;
            border: none;
        }

        .dashboard-card {
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
            border-radius: 12px;
        }

        .dashboard-card .icon {
            font-size: 2.5rem;
        }

        .alert-float {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            min-width: 300px;
        }
    </style>
</head>

<body>
    <!-- Success Alert Containers -->
    <div id="successAlert" class="alert alert-success alert-dismissible fade alert-float d-none" role="alert">
        <span id="successMessage"></span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    <!-- Navbar -->
    <nav class="navbar navbar-light bg-white shadow-sm">
        <div class="container-fluid">
            <span class="navbar-brand fw-bold">Hospital Management App</span>
            <div>
                <span class="me-3">Welcome, <%= username %></span>
                <a href="#" id="logout" class="btn btn-link">Sign out</a>
            </div>
        </div>
    </nav>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-2 sidebar pt-4">
                <div class="list-group">
                    <a href="/forms/dashboard/level3" class="list-group-item list-group-item-action">
                        <span class="me-2">&#8962;</span> Dashboard
                    </a>
                    <a href="/forms/level3" class="list-group-item list-group-item-action">
                        <span class="me-2">+</span> New Patient Case
                    </a>
                    <a href="/forms/view/level3" class="list-group-item list-group-item-action">
                        <span class="me-2">+</span> All Patients
                    </a>
                    <a href="/forms/followup/level3" class="list-group-item list-group-item-action">
                        <span class="me-2">&#128197;</span> Subsequent Follow Up
                    </a>
                    <a href="/forms/report/level3" class="list-group-item list-group-item-action">
                        <span class="me-2">&#128202;</span> Report
                    </a>
                    <a href="/forms/appointments/view" class="list-group-item list-group-item-action active">
                        <span class="me-2">&#128197;</span> View Appointments
                    </a>
                </div>
            </nav>
            <!-- Main Content -->
            <main class="col-md-10 ms-sm-auto px-4 pt-4">
                <div class="card">
                    <div class="card-header">
                        <h4>All Appointments</h4>
                    </div>
                    <div class="card-body">
                        <% if (typeof rescheduleSuccess !=='undefined' && rescheduleSuccess) { %>
                            <div class="alert alert-info alert-dismissible fade show" role="alert">
                                <strong>⏰ Appointment Rescheduled!</strong> The appointment has been successfully
                                rescheduled.
                                <button type="button" class="btn-close" data-bs-dismiss="alert"
                                    aria-label="Close"></button>
                            </div>
                            <% } %>
                                <% if (typeof cancelSuccess !=='undefined' && cancelSuccess) { %>
                                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                        <strong>❌ Appointment Cancelled!</strong> The appointment has been cancelled.
                                        <button type="button" class="btn-close" data-bs-dismiss="alert"
                                            aria-label="Close"></button>
                                    </div>
                                    <% } %>
                                        <div id="cancelErrorAlert" class="alert alert-danger d-none" role="alert">
                                            <strong>Error!</strong> Failed to cancel the appointment. Please try again.
                                        </div>
                                        <div id="calendar"></div>
                                        <table class="table table-bordered mt-4">
                                            <thead>
                                                <tr>
                                                    <th>Date & Time</th>
                                                    <th>Patient UID</th>
                                                    <th>Patient Name</th>
                                                    <th>Doctor</th>
                                                    <th>Booked By</th>
                                                    <th>Actions</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% appointments.forEach(a => { %>
                                                    <% if (!a.cancelled) { %>
                                                    <tr>
                                                        <td>
                                                            <%= new Date(a.date).toLocaleString() %>
                                                        </td>
                                                        <td>
                                                            <%= a.patientUid %>
                                                        </td>
                                                        <td>
                                                            <%= a.patientName %>
                                                        </td>
                                                        <td>
                                                            <%= a.doctor %>
                                                        </td>
                                                        <td>
                                                            <%= a.createdBy %>
                                                        </td>
                                                        <td>
                                                            <button class="btn btn-sm btn-primary me-1"
                                                                onclick="viewAppointment('<%= a.patientName %>', '<%= a.doctor %>', '<%= new Date(a.date).toLocaleString() %>', '<%= a.patientUid %>', '<%= a.createdBy %>')">View</button>
                                                            <button class="btn btn-sm btn-info me-1"
                                                                onclick="showRescheduleModal('<%= a._id %>', '<%= a.date %>')">Reschedule</button>
                                                            <button class="btn btn-sm btn-danger"
                                                                onclick="cancelAppointmentRow(this, '<%= a._id %>')">Cancel</button>
                                                        </td>
                                                    </tr>
                                                    <% } %>
                                                <% }); %>
                                            </tbody>
                                        </table>
                    </div>
                </div>
                <!-- Reschedule Modal -->
                <div class="modal fade" id="rescheduleModal" tabindex="-1" aria-labelledby="rescheduleModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <form id="rescheduleForm" class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="rescheduleModalLabel">Reschedule Appointment</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <input type="hidden" name="appointmentId" id="rescheduleAppointmentId">
                                <div class="mb-3">
                                    <label for="newDate" class="form-label">New Date & Time (Office Hours: 9:00 AM -
                                        5:00 PM)</label>
                                    <input type="datetime-local" class="form-control" name="newDate" id="newDate"
                                        min="<%= new Date().toISOString().slice(0,16) %>" required>
                                    <div class="invalid-feedback">Please select a future date between 9:00 AM and 5:00
                                        PM.</div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-info">Reschedule</button>
                            </div>
                        </form>
                    </div>
                </div>
                <!-- Add View Modal -->
                <div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="viewModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="viewModalLabel">Appointment Details</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body" id="viewModalBody">
                                <!-- Filled dynamically -->
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script>
        // Logout functionality
        document.getElementById('logout').addEventListener('click', function (e) {
            e.preventDefault();
            fetch('/auth/logout', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'same-origin'
            }).then(response => {
                if (response.ok) {
                    localStorage.setItem('logout-event', Date.now());
                    window.location.href = '/auth/login';
                }
            });
        });
        window.addEventListener('storage', function (event) {
            if (event.key === 'logout-event') {
                window.location.href = '/auth/login';
            }
        });

        // FullCalendar for viewing appointments
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                events: '/forms/appointments/api',
                eventClick: function (info) {
                    alert(info.event.title + '\n' + new Date(info.event.start).toLocaleString());
                }
            });
            calendar.render();
        });

        // Reschedule logic with date validation
        function showRescheduleModal(appointmentId, currentDate) {
            const now = new Date();
            const minDateTime = now.toISOString().slice(0,16);
            
            const dateInput = document.getElementById('newDate');
            dateInput.min = minDateTime;
            dateInput.value = new Date(currentDate).toISOString().slice(0,16);
            
            document.getElementById('rescheduleAppointmentId').value = appointmentId;
            var modal = new bootstrap.Modal(document.getElementById('rescheduleModal'));
            modal.show();
        }

        function showSuccessAlert(message) {
            const alert = document.getElementById('successAlert');
            document.getElementById('successMessage').textContent = message;
            alert.classList.remove('d-none');
            alert.classList.add('show');
        }

        document.getElementById('rescheduleForm').addEventListener('submit', function (e) {
            e.preventDefault();
            const newDate = new Date(document.getElementById('newDate').value);
            const now = new Date();

            // Check if date is in past
            if (newDate <= now) {
                document.getElementById('newDate').classList.add('is-invalid');
                alert('Please select a future date and time');
                return;
            }

            // Check office hours (9 AM to 5 PM)
            const hours = newDate.getHours();
            if (hours < 9 || hours >= 17) {
                document.getElementById('newDate').classList.add('is-invalid');
                alert('Please select a time between 9:00 AM and 5:00 PM');
                return;
            }

            // Remove invalid class if validation passes
            document.getElementById('newDate').classList.remove('is-invalid');

            const appointmentId = document.getElementById('rescheduleAppointmentId').value;
            
            fetch('/forms/appointments/reschedule', {
                method: 'POST',
                headers: { 
                    'Content-Type': 'application/json' 
                },
                credentials: 'same-origin',
                body: JSON.stringify({ appointmentId, newDate })
            })
            .then(res => {
                if (!res.ok) throw new Error('Network response was not ok');
                return res.json();
            })
            .then((data) => {
                if (data && data.success) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('rescheduleModal'));
                    modal.hide();
                    showSuccessAlert('✅ Appointment successfully rescheduled!');
                    setTimeout(() => window.location.reload(), 2000);
                } else {
                    alert('Failed to reschedule appointment: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(err => {
                alert('Failed to reschedule appointment: ' + err.message);
            });
        });

        // View logic
        function viewAppointment(name, doctor, date, uid, createdBy) {
            document.getElementById('viewModalBody').innerHTML =
                `<strong>Patient Name:</strong> ${name}<br>
                 <strong>Patient UID:</strong> ${uid}<br>
                 <strong>Doctor:</strong> ${doctor}<br>
                 <strong>Date & Time:</strong> ${date}<br>
                 <strong>Booked By:</strong> ${createdBy}`;
            var modal = new bootstrap.Modal(document.getElementById('viewModal'));
            modal.show();
        }

        // Cancel logic: Persist cancelled state in backend
        function cancelAppointmentRow(btn, appointmentId) {
            if (confirm('Are you sure you want to cancel this appointment?')) {
                fetch('/forms/appointments/cancel', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'same-origin',
                    body: JSON.stringify({ appointmentId })
                })
                .then(res => {
                    if (!res.ok) throw new Error('Network response was not ok');
                    return res.json();
                })
                .then(data => {
                    if (data && data.success) {
                        const row = btn.closest('tr');
                        if (row) row.style.display = 'none';
                        showSuccessAlert('❌ Appointment successfully cancelled!');
                    } else {
                        alert('Failed to cancel appointment.');
                    }
                })
                .catch((err) => {
                    alert('Failed to cancel appointment (network or server error): ' + err.message);
                });
            }
        }
    </script>
</body>

</html>